- name: "Deploy update in a server"
  hosts: "localhost"
  vars:
    prefix: "{{ ansible_user_dir }}/testing-ansible"
    domain: "{{ ansible_default_ipv4.address }}.xip.io"
    user  : "{{ ansible_user_id }}"
    group : "{% if ansible_os_family == 'Debian' %}www-data{% else %}nginx{% endif %}"

  tasks:
  - name: "Find out Git url"
    command: "git config --get remote.origin.url"
    register: "repo"
    changed_when: false

  #
  # Variables
  #
  - set_fact:
      repo: "{{ repo.stdout }}"
  - set_fact:
      # Ansible 2: {{ repo|basename|splitext|first }}
      name: "{{ repo|basename|regex_replace('.git$', '') }}"
  - set_fact:
      root: "{{ prefix }}/{{ name }}"
  - set_fact:
      venv: "{{ root }}/usr"
      sock: "{{ root }}/var/run/uwsgi.socket"
      fifo: "{{ root }}/var/run/uwsgi.fifo"
      pid : "{{ root }}/var/run/uwsgi.pid"

  - name: "Git pull"
    git: "repo={{ repo }} dest={{ root }}"

  #
  # Virtualenv
  #
  # Ansible 2: Use just the pip module, with the new virtualenv_python option
  - name: "Setup Virtualenv"
    command: "virtualenv -p /usr/bin/python3 {{ venv }}"
    args:
        creates: "{{ venv }}"

  - name: "Install Python packages"
    pip:
      executable: pip
      virtualenv: "{{ venv }}"
      requirements: "{{ root }}/boot/requirements.txt"

  #
  # Database
  #
  # FIXME It says 'ok' when it should say 'changed'
  - name: "Create database"
    django_manage:
      virtualenv: "{{ venv }}"
      app_path: "{{ root }}"
      settings: "project.settings"
      command: "migrate"

  #
  # etc (uwsgi, nginx, monit)
  #
  - name: "Create etc dir"
    file:
      path: "{{ root }}/etc"
      state: "directory"

  - name: "Uwsgi configuration"
    template:
      src: "templates/uwsgi.ini.j2"
      dest: "{{ root }}/etc/uwsgi.conf"
    notify: "reload uwsgi"

  - name: "Nginx configuration"
    template:
      src: "templates/nginx.conf.j2"
      dest: "{{ root }}/etc/nginx.conf"
    notify: "reload nginx"

  - name: "(sudo) Nginx: mkdir /etc/nginx/sites"
    file: "path=/etc/nginx/sites state=directory"
    sudo: true

  - name: "Nginx symlink"
    file:
      path: "/etc/nginx/sites/{{ name }}.conf"
      state: "link"
      src: "{{ root }}/etc/nginx.conf"
    notify: "reload nginx"
    sudo: true

  - name: "Monit configuration"
    template:
      src: "templates/monit.conf.j2"
      dest: "{{ root }}/etc/monit.conf"
    notify: "restart monit"

  - name: "(sudo) Monit: mkdir /etc/monit.d"
    file: "path=/etc/monit.d state=directory"
    sudo: true

  - name: "Monit symlink"
    file:
      path: "/etc/monit.d/{{ name }}.conf"
      state: "link"
      src: "{{ root }}/etc/monit.conf"
    notify: "restart monit"
    sudo: true

  #
  # Handlers
  #
  handlers:
  - name: "reload uwsgi"
    command: "echo r > {{ fifo }}"

  - name: "reload nginx"
    service: "name=nginx state=reloaded"
    sudo: true

  - name: "restart monit"
    service: "name=monit state=restarted"
    sudo: true
